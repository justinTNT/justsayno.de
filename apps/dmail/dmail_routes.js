// Generated by CoffeeScript 1.7.1
(function() {
  var crypto, mailuser;

  mailuser = require('./schema/mailuser').name;

  crypto = require("../../justsayno.de/crypto");

  module.exports = function(env) {
    var Guest, Mailuser, doesntHavePass, mustHaveHandle;
    Guest = env.db.model('Guest');
    Mailuser = env.db.model(mailuser);
    mustHaveHandle = function(req, res, next) {
      var _ref, _ref1, _ref2;
      if (!((_ref = req.session) != null ? (_ref1 = _ref.user) != null ? (_ref2 = _ref1.handle) != null ? _ref2.length : void 0 : void 0 : void 0)) {
        return res.redirect("/register");
      }
      return next();
    };
    doesntHavePass = function(req, res, next) {
      var _ref, _ref1, _ref2;
      if ((_ref = req.session) != null ? (_ref1 = _ref.user) != null ? (_ref2 = _ref1.pass) != null ? _ref2.length : void 0 : void 0 : void 0) {
        return res.redirect("/user/" + req.session.user.handle);
      }
      return next();
    };
    env.app.get('/registration', mustHaveHandle, doesntHavePass, function(req, res, next) {
      var temps;
      temps = [
        {
          selector: '#main',
          filename: 'registration.jade'
        }
      ];
      return env.respond(req, res, env.basetemps, temps, {
        handle: req.session.user.handle
      });
    });
    env.app.get('/deregister', mustHaveHandle, doesntHavePass, function(req, res, next) {
      return Guest.remove({
        handle: req.session.user.handle
      }, function(err, docs) {
        return res.redirect('/logout');
      });
    });
    env.app.get('/register', doesntHavePass, function(req, res, next) {
      var temps, _ref, _ref1, _ref2;
      if ((_ref = req.session) != null ? (_ref1 = _ref.user) != null ? (_ref2 = _ref1.handle) != null ? _ref2.length : void 0 : void 0 : void 0) {
        return res.redirect("/registration");
      }
      temps = [
        {
          selector: '#main',
          filename: 'rego.jade'
        }
      ];
      return env.respond(req, res, env.basetemps, temps, null);
    });
    env.app.get('/user/:handle', function(req, res, next) {
      var _ref, _ref1;
      if (((_ref = req.session) != null ? (_ref1 = _ref.user) != null ? _ref1.handle : void 0 : void 0) !== req.params.handle) {
        return res.redirect('/register');
      }
      return Mailuser.find({
        handle: req.session.user.handle
      }, function(err, docs) {
        var o, temps, _ref2;
        if (!err && (docs != null ? docs.length : void 0) === 1) {
          if (!docs[0].complete && ((_ref2 = docs[0].code) != null ? _ref2.length : void 0)) {
            res.redirect('/confirm');
          }
        }
        temps = [
          {
            selector: '#main',
            filename: 'user.jade'
          }
        ];
        o = {
          handle: req.params.handle
        };
        return env.respond(req, res, env.basetemps, temps, o);
      });
    });
    env.app.get('/confirm', mustHaveHandle, function(req, res, next) {
      return Mailuser.find({
        handle: req.session.user.handle
      }, function(err, docs) {
        var o, temps, _ref;
        if (!err && (docs != null ? docs.length : void 0) === 1) {
          if (!docs[0].complete && ((_ref = docs[0].code) != null ? _ref.length : void 0)) {
            temps = [
              {
                selector: '#main',
                filename: 'confirm.jade'
              }
            ];
            o = {
              handle: docs[0].handle,
              email: docs[0].email,
              code: docs[0].code
            };
            env.respond(req, res, env.basetemps, temps, o);
          }
        }
        return res.redirect("/user/" + req.session.user.handle);
      });
    });
    env.app.post('/confirm', function(req, res, next) {
      console.log("mailhook from cloudmailin");
      return console.dir(req.body);
    });
    env.app.post('/dorego', mustHaveHandle, function(req, res, next) {
      return Guest.find({
        handle: req.session.user.handle
      }, function(err, docs) {
        var doc, i, index, u, verificationChars, verificationCode, _i;
        if (err || (docs != null ? docs.length : void 0) !== 1) {
          return res.send("User not found", 404);
        }
        doc = docs[0];
        doc.email = req.body.email;
        doc.salt = crypto.generateSalt();
        doc.pass = crypto.hashPassword(req.body.pass, doc.salt);
        doc.save();
        verificationCode = '';
        verificationChars = '0123456789abcdefghijklmnopqrstuvwxyz0123456789';
        for (i = _i = 0; _i <= 7; i = ++_i) {
          index = Math.floor(Math.random() * verificationChars.length);
          verificationCode += verificationChars.substring(index, index + 1);
        }
        u = new Mailuser({
          handle: req.session.user.handle,
          email: req.body.email,
          code: verificationCode
        });
        u.save();
        return res.send('OK', 200);
      });
    });
    return env.app.post('/preregister', function(req, res, next) {
      var _ref, _ref1, _ref2;
      if ((_ref = req.session) != null ? (_ref1 = _ref.user) != null ? (_ref2 = _ref1.handle) != null ? _ref2.length : void 0 : void 0 : void 0) {
        return res.redirect("/user/" + req.session.user.handle);
      }
      if (!req.body.handle.match(/^[a-z0-9_]+$/)) {
        return res.send('Not a valid email address', 404);
      }
      return Guest.find({
        handle: req.body.handle
      }, function(err, docs) {
        var g;
        if (err) {
          throw err;
        }
        if (docs != null ? docs.length : void 0) {
          return res.send('That user already exists', 404);
        }
        g = new Guest({
          handle: req.body.handle,
          verified: false
        });
        return g.save(function(err) {
          if (err) {
            console.log("ERROR adding new user " + g.handle);
            delete req.session.user;
            g = {};
          } else {
            req.session.user = _.clone(g);
            console.log("initiated new user " + g.handle);
          }
          return env.respond(req, res, null, null, g);
        });
      });
    });
  };

}).call(this);

//# sourceMappingURL=dmail_routes.map
