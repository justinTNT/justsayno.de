// Generated by CoffeeScript 1.6.2
/*
# get the list of files found in the named directory,
# and pass on for processing.
# cb is passed the contents of each file,
# fcb is called when we're all done
*/


(function() {
  var eachfile, fs, read_dir, read_file, touch_dir, touch_file;

  read_dir = function(dirname, cb, fcb) {
    return fs.readdir(dirname, function(err, files) {
      if (!err) {
        return eachfile(dirname, files, cb, fcb);
      }
      if (err.code === 'ENOENT') {
        console.log("directory not found : " + dirname);
        return typeof fcb === "function" ? fcb() : void 0;
      }
      console.log("failed to read_dir : " + dirname);
      console.dir(err);
      throw err;
    });
  };

  /*
  # reads contents of named file from specified directory,
  # and returns the contents (as a string) to the callback
  */


  read_file = function(dname, fname, cback) {
    return fs.readFile("" + dname + "/" + fname, function(err, data) {
      if (!err) {
        return cback(fname, String(data));
      }
      console.dir(err);
      console.log("failed to read_file " + dname + "/" + fname);
      throw err;
    });
  };

  /*
  # for a list of files already derived from the named directory,
  # iterate through the list, calling cb with the contents of each file,
  # then calling fcb once they're all processed
  */


  eachfile = function(dirname, files, cb, fcb) {
    var fn;

    if (!(fn = files.shift())) {
      return typeof fcb === "function" ? fcb() : void 0;
    }
    return read_file(dirname, fn, function(cbfname, text) {
      cb(cbfname, text);
      return eachfile(dirname, files, cb, fcb);
    });
  };

  /*
  # for a list of files already derived from the named directory,
  # iterate through the list, calling cb with the name of each file,
  # then calling fcb once they're all processed
  */


  touch_file = function(files, op, fcb) {
    var fn;

    if (!(fn = files.shift())) {
      return typeof fcb === "function" ? fcb() : void 0;
    }
    return op(fn, function() {
      return touch_file(files, op, fcb);
    });
  };

  /*
  # get the list of files found in the named directory,
  # and pass on for processing.
  # op is passed the name of each file, and a continuation callback
  # fcb is called when we're all done
  */


  touch_dir = function(dirname, op, fcb) {
    return fs.readdir(dirname, function(err, files) {
      if (!err) {
        return touch_file(files, op, fcb);
      }
      if (err.code === 'ENOENT') {
        console.log("directory not found: " + dirname);
        return typeof fcb === "function" ? fcb() : void 0;
      }
      console.log("failed to touch : " + dirname);
      console.dir(err);
      throw err;
    });
  };

  fs = require("fs");

  exports.eachfile = eachfile;

  exports.read_dir = read_dir;

  exports.touch_dir = touch_dir;

}).call(this);

/*
//@ sourceMappingURL=dirtools.map
*/
